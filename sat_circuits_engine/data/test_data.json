{

    "example_1": {
        "num_input_qubits": 4,
        "num_total_qubits": 7,
        "constraints_string": "([0] == [1]),([2] == [3])",
        "high_level_constraints_string": "(x0 == x1),(x2 == x3)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 1},
        "num_solutions": 4,
        "num_iterations": 1,
        "solutions": ["0000", "1100", "0011", "1111"],
        "perform_test": true
    },

    "example_2": {
        "num_input_qubits": 4,
        "num_total_qubits": 10,
        "constraints_string": "([0] == [1]),([2] == [3]),([1][0] != [3][2])",
        "num_solutions": 2,
        "num_iterations": 2,
        "solutions": ["1100", "0011"],
        "perform_test": true
    },

    "example_3": {
        "num_input_qubits": 5,
        "num_total_qubits": 12,
        "constraints_string": "([4][3][2] != [0]),([2] == [3]),([3] == [4]),([0] != [1])",
        "num_solutions": 3,
        "num_iterations": 2,
        "solutions": ["11110", "00001", "11101"],
        "perform_test": true
    },

    "example_4": {
        "num_input_qubits": 8,
        "num_total_qubits": 22,
        "constraints_string": "([2][1][0] == [5][4][3]),([4][3] == [1][0]),([1] != [7]),([3][2] != [7][6]),([3] == [4]),([5] != [6])",
        "num_solutions": 4,
        "num_iterations": 6,
        "solutions": ["11000000", "10100100", "01011011", "00111111"],
        "perform_test": true
    },

    "example_5": {
        "num_input_qubits": 6,
        "num_total_qubits": 15,
        "constraints_string": "([4][3] == [1][0]),([5] != [2]),([5] == [0]),([5][4] == [3][2])",
        "num_solutions": 2,
        "num_iterations": 4,
        "solutions": ["010110", "101001"],
        "perform_test": true
    },

    "example_6": {
        "num_input_qubits": 7,
        "num_total_qubits": 15,
        "constraints_string": "([3][2] != [0]),([6] == [5]),([6][5][4] == [3])",
        "num_solutions": 12,
        "num_iterations": 2,
        "solutions": ["0000001", "0000011", "0000100", "0000110", "0011000", "0011001", "0011010", "0011011", "0011100", "0011101", "0011110", "0011111"],
        "perform_test": true
    },

    "example_7": {
        "num_input_qubits": 9,
        "num_total_qubits": 18,
        "constraints_string": "([4][3][2] == [0]),([2] == [3]),([3] == [4]),([0] != [1]),([8][7] == [3][2])",
        "num_solutions": 4,
        "num_iterations": 8,
        "solutions": ["000000010", "000100010", "001000010", "001100010"],
        "perform_test": true
    },

    "example_8": {
        "num_input_qubits": 10,
        "num_total_qubits": 20,
        "constraints_string": "([9][8][7][6] == [5][4][3][2]),([1] != [0]),([9][8] == [7][6])",
        "num_solutions": 8,
        "num_iterations": 8,
        "solutions": ["1010101010", "0000000010", "1010101001", "0000000001", "1111111110", "1111111101", "0101010110", "0101010101"],
        "perform_test": true
    },

    "example_9": {
        "num_input_qubits": 11,
        "num_total_qubits": 27,
        "constraints_string": "([4][3] == [2][1]),([9] == [0]),([1] == [0]),([9][7][5] != [3][2][1]),([3][2] == [1][0]),([9][7] == [1][0])",
        "num_solutions": 16,
        "num_iterations": 8,
        "solutions": ["00000100000", "00001100000", "00100100000", "00101100000", "01010011111", "01011011111",
                      "01110011111", "01111011111", "10000100000", "10001100000", "10100100000", "10101100000",
                      "11010011111", "11011011111", "11110011111", "11111011111"],
        "perform_test": true,
        "note": "*** WARNING - This example exploits 27 qubits and is heavy for a classical computer ***"
    },

    "example_10": {
        "num_input_qubits": 8,
        "num_total_qubits": 23,
        "constraints_string": "([2][1][0] == [5][4][3]),([4][3] == [1][0]),([1] != [7]),([3][2] != [7][6]),([3] == [4]),([5] != [6]),([6] == [7])",
        "num_solutions": 2,
        "num_iterations": 8,
        "solutions": ["11000000", "00111111"],
        "perform_test": true
    },

    "example_11": {
        "num_input_qubits": 10,
        "num_total_qubits": 24,
        "constraints_string": "([9][8][7][6] == [5][4][3][2]),([1] != [0]),([9][8] == [7][6]),([3][2] == [5][4]),([9] == [0])",
        "num_solutions": 4,
        "num_iterations": 12,
        "solutions": ["0101010110", "1111111101", "1010101001", "0000000010"],
        "perform_test": true
    },

    "example_12": {
        "num_input_qubits": 11,
        "num_total_qubits": 23,
        "constraints_string": "([9][8][7] == [2][1][0]),([4][3] != [2][1]),([6] == [5]),([5] == [4]),([4] != [3]),([4] == [2])",
        "num_solutions": 8,
        "num_iterations": 12,
        "solutions": ["11101110110", "00010001001", "10010001001", "00000001000", "11111110111", "01101110110", "01111110111", "10000001000"],
        "perform_test": true
    },

    "example_13": {
        "num_input_qubits": 8,
        "num_total_qubits": 20,
        "constraints_string": "([0] != [1]),([4][3] != [5]),([1] != [4][3]),([4][3] != [6]),([6] != [7]),([0] != [2]),([1] != [7]),([5] != [7])",
        "high_level_constraints_string": "(x0 != x1),(x3 != x4),(x1 != x3),(x3 != x5),(x5 != x6),(x0 != x2),(x1 != x6),(x4 != x6)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 6,
        "num_iterations": 5,
        "solutions": ["10011001", "10010001", "10001001", "01110110", "01100110", "01111110"],
        "perform_test": true
    },

    "example_14": {
        "num_input_qubits": 8,
        "num_total_qubits": 29,
        "constraints_string": "([0] != [1]),([2] + 2 != [4][3]),([4][3] != [5]),([1] != [4][3]),([4][3] != [6]),([6] != [7]),([0] != [2]),([1] != [6]),([5] != [7]),([4][3] == 2),([2] + [5] + [4][3] == 3)",
        "high_level_constraints_string": "(x0 != x1),(x2 + 2 != x3),(x3 != x4),(x1 != x3),(x3 != x5),(x5 != x6),(x0 != x2),(x1 != x5),(x4 != x6),(x3 == 2),(x2 + x4 + x3 == 3)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 1,
        "num_iterations": 12,
        "solutions": ["10010110"],
        "perform_test": false,
        "note": "*** WARNING - This example exploits 29 qubits, intractable by AerSimulator (max 28 qubits) and is heavy for a classical computer ***"
    },

    "example_15": {
        "num_input_qubits": 8,
        "num_total_qubits": 21,
        "constraints_string": "([0] != [1]),([4][3] != [5]),([1] != [4][3]),([4][3] != [6]),([6] != [7]),([0] != [2]),([1] != [6]),([5] != [7]),([4][3] == 2)",
        "high_level_constraints_string": "(x0 != x1),(x3 != x4),(x1 != x3),(x3 != x5),(x5 != x6),(x0 != x2),(x1 != x5),(x4 != x6),(x3 == 2)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 2,
        "num_iterations": 8,
        "solutions": ["01110001", "10010110"],
        "perform_test": true
    },

    "example_16": {
        "num_input_qubits": 8,
        "num_total_qubits": 26,
        "constraints_string": "([0] != [1]),([2] + 2 != [4][3]),([4][3] != [5]),([1] != [4][3]),([4][3] != [6]),([6] != [7]),([0] != [2]),([1] != [6]),([5] != [7]),([4][3] == 2)",
        "high_level_constraints_string": "(x0 != x1),(x2 + 2 != x3),(x3 != x4),(x1 != x3),(x3 != x5),(x5 != x6),(x0 != x2),(x1 != x5),(x4 != x6),(x3 == 2)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 1,
        "num_iterations": 12,
        "solutions": ["10010110"],
        "perform_test": true,
        "note": "*** WARNING - This example exploits 26 qubits and is heavy for a classical computer ***"
    },

    "example_17": {
        "num_input_qubits": 5,
        "num_total_qubits": 8,
        "constraints_string": "([4] == [3]),([2][1][0] == 6)",
        "high_level_constraints_string": "(x2 == x1),(x0 == 6)",
        "high_level_vars": {"x0": 3, "x1": 1, "x2": 1},
        "num_solutions": 2,
        "num_iterations": 3,
        "solutions": ["00110", "11110"],
        "perform_test": true
    },

    "example_18": {
        "num_input_qubits": 7,
        "num_total_qubits": 10,
        "constraints_string": "([5] == [6]),([4][3][2][1][0] == 22)",
        "high_level_constraints_string": "(x1 == x2),(x0 == 22)",
        "high_level_vars": {"x0": 5, "x1": 1, "x2": 1},
        "num_solutions": 2,
        "num_iterations": 6,
        "solutions": ["1110110", "0010110"],
        "perform_test": true
    },

    "example_19": {
        "num_input_qubits": 8,
        "num_total_qubits": 22,
        "constraints_string": "([0] != [1]),([2] == 1),([4][3] != [5]),([1] != [4][3]),([4][3] != [6]),([6] != [7]),([0] != [2]),([1] != [6]),([5] != [7]),([4][3] == 2)",
        "high_level_constraints_string": "(x0 != x1),(x2 == 1),(x3 != x4),(x1 != x3),(x3 != x5),(x5 != x6),(x0 != x2),(x1 != x5),(x4 != x6),(x3 == 2)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 1,
        "num_iterations": 12,
        "solutions": ["10010110"],
        "perform_test": true
    },

    "example_20": {
        "num_input_qubits": 4,
        "num_total_qubits": 11,
        "constraints_string": "([0] + [1] + [2] == 2),([3][2] != [1][0])",
        "num_solutions": 5,
        "num_iterations": 1,
        "solutions": ["1101", "1110", "0011", "1011", "0110"],
        "perform_test": true
    },

    "example_21": {
        "num_input_qubits": 7,
        "num_total_qubits": 16,
        "constraints_string": "([0] + [1] + [2] + [6][5][4] == 2),([3][2] != [1][0])",
        "num_solutions": 11,
        "num_iterations": 2,
        "solutions": ["0001101", "0000110", "0010100", "0010001", "0101000", "0001011", "0011100", "0000011", "0011001", "0010010", "0001110"],
        "perform_test": true
    },

    "example_22": {
        "num_input_qubits": 7,
        "num_total_qubits": 15,
        "constraints_string": "([0] + [1] + [2] + [6][5][4] == 7),([3][2] != [1][0])",
        "num_solutions": 12,
        "num_iterations": 2,
        "solutions": ["1101100", "1011101", "1010110", "1100010", "1011011", "1010011", "1101001", "1000111", "1111000", "1011110", "1100100", "1100001"],
        "perform_test": true
    },

    "example_23": {
        "num_input_qubits": 8,
        "num_total_qubits": 16,
        "constraints_string": "(1 == [1]),([2] == 1),(1 == [7]),([0] == 0),(0 == [6]),([5] == 0),([4][3] == 2)",
        "high_level_constraints_string": "(1 == x1),(x2 == 1),(1 == x6),(x0 == 0),(0 == x5),(x4 == 0),(x3 == 2)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 1,
        "num_iterations": 12,
        "solutions": ["10010110"],
        "perform_test": true
    },

    "example_24": {
        "num_input_qubits": 8,
        "num_total_qubits": 18,
        "constraints_string": "([3][2] + [0] + [1] + 5 == [7][6][5][4])",
        "high_level_constraints_string": "(x2 + x0 + x1 + 5 == x3)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 2, "x3": 4},
        "num_solutions": 16,
        "num_iterations": 3,
        "solutions": ["10101111", "10011110", "01110011", "10011101", "10001001", "01010000", "01100001", "10011011", "01110110", "01110101", "10000111", "10001100", "01111000", "10001010", "01100100", "01100010"],
        "perform_test": true
    },

    "example_25": {
        "num_input_qubits": 8,
        "num_total_qubits": 16,
        "constraints_string": "([3][2] + [7][6][5] == 9),([4] == [2]),([7] || ~[1] || ~[0])",
        "num_solutions": 8,
        "num_iterations": 4,
        "solutions": ["11011110", "11101001", "11011100", "11101011", "11101000", "11011101", "11011111", "11101010"],
        "perform_test": true
    },

    "example_26": {
        "num_input_qubits": 8,
        "num_total_qubits": 16,
        "constraints_string": "([3][2] + [7][6][5] == 9),([4] == [2]),([7] && ~[1] && ~[0])",
        "num_solutions": 2,
        "num_iterations": 8,
        "solutions": ["11101000", "11011100"],
        "perform_test": true
    },

    "example_27": {
        "num_input_qubits": 11,
        "num_total_qubits": 27,
        "constraints_string": "([2][1][0] != 4),([3] + [6][5][4] == [2][1][0]),([10][9][8][7] + [2][1][0] + [3] + [6][5][4] != 27)",
        "high_level_constraints_string": "(x0 != 4),(x1 + x2 == x0),(x3 + x0 + x1 + x2 != 27)",
        "high_level_vars": {"x0": 3, "x1": 1, "x2": 3, "x3": 4},
        "num_solutions": 204,
        "num_iterations": 2,
        "solutions": ["00000011010", "10000110011", "10011011110", "01010000000", "01101110111", "10001011110", "00110011010", "00111101111", "11010001001", "00011001101", "11000000000", "01001100110", "11000001001", "11110010001", "10111001101", "11000100010", "11111101111", "11010101011", "00011010101", "00000100010", "10000011010", "11110000000", "01111011110", "11101011110", "10110101011", "01110110011", "10110011010", "11101001101", "00110010001", "01101001101", "10000101011", "00001010101", "11110101011", "01010110011", "01100001001", "00011011110", "01011011110", "10001100110", "01101010101", "10010010001", "10011110111", "00010010001", "10001101111", "00110000000", "11000110011", "11110001001", "01000100010", "10001001101", "11001100110", "01110011010", "11101010101", "00100110011", "01111010101", "10100100010", "10100101011", "00110110011", "00001101111", "01000110011", "01001110111", "10100001001", "11001010101", "00110101011", "10010001001", "11011011110", "11100110011", "11010110011", "00100101011", "00101110111", "11011100110", "11001011110", "00101011110", "00001001101", "10101001101", "01001101111", "00111010101", "11000101011", "00000000000", "01101101111", "00011101111", "01101011110", "00000010001", "11100101011", "00010100010", "10011100110", "11001101111", "10010011010", "01000001001", "00001110111", "00100001001", "01110010001", "10011101111", "11010000000", "01110101011", "01000011010", "01100100010", "11010100010", "01001001101", "10100010001", "11001110111", "10100000000", "00110001001", "11110100010", "11010011010", "00100100010", "11010010001", "01100010001", "00100010001", "10101110111", "10000001001", "10010100010", "11100000000", "01100011010", "11100001001", "01011001101", "01010100010", "11011010101", "10001110111", "10010110011", "10100110011", "01001010101", "01000010001", "01111100110", "10101011110", "01100000000", "00000001001", "01100110011", "00111110111", "10111101111", "10011010101", "01000101011", "01011110111", "00101001101", "00110100010", "00101101111", "10101010101", "01000000000", "01110000000", "01111110111", "01100101011", "10010101011", "00111100110", "10111010101", "01011100110", "00101100110", "00111001101", "10010000000", "10011001101", "11100010001", "11111010101", "11111110111", "10110100010", "11101110111", "00100000000", "10110000000", "10110001001", "11110011010", "00011100110", "10110110011", "10101101111", "11100011010", "10100011010", "10000000000", "11000010001", "01001011110", "10110010001", "11011001101", "00100011010", "00101010101", "01010010001", "01111001101", "10101100110", "00000110011", "00010001001", "11101101111", "01101100110", "11111001101", "00010101011", "01010011010", "11110110011", "11000011010", "00011110111", "10001010101", "00001100110", "10000010001", "01011101111", "10111100110", "00010000000", "01010101011", "00001011110", "01010001001", "01111101111", "10111011110", "11001001101", "01011010101", "00000101011", "00010011010", "10000100010", "01110100010", "00111011110", "01110001001", "10111110111", "00010110011", "11101100110", "11100100010"],
        "perform_test": true
    },

    "example_28": {
        "num_input_qubits": 8,
        "num_total_qubits": 20,
        "constraints_string": "([2][1][0] != 5),([3] == [4]),([2][1][0] + [3] + [4] + 2 == [7][6][5]),([7][6][5] != 7)",
        "high_level_constraints_string": "(x0 != 5),(x1 == x2),(x0 + x1 + x2 + 2 == x3),(x3 != 7)",
        "high_level_vars": {"x0": 3, "x1": 1, "x2": 1, "x3": 3},
        "num_solutions": 8,
        "num_iterations": 4,
        "solutions": ["10111001", "10011000", "01100001", "11011010", "10000010", "01000000", "10100011", "11000100"],
        "perform_test": true
    },

    "example_29": {
        "num_input_qubits": 8,
        "num_total_qubits": 27,
        "constraints_string": "([0] != [1]),([2] + 2 != [4][3]),([4][3] != [5]),([4][3] != [1]),([6] != [7]),([0] != [2]),([1] != [6]),([5] != [7]),([4][3] == 2),([2] + [5] + [4][3] == 3)",
        "high_level_constraints_string": "(x0 != x1),(x2 + 2 != x3),(x3 != x4),(x3 != x1),(x5 != x6),(x0 != x2),(x1 != x5),(x4 != x6),(x3 == 2),(x2 + x4 + x3 == 3)",
        "high_level_vars": {"x0": 1, "x1": 1, "x2": 1, "x3": 2, "x4": 1, "x5": 1, "x6": 1},
        "num_solutions": 1,
        "num_iterations": 12,
        "solutions": ["10010110"],
        "perform_test": true,
        "note": "*** WARNING - This example exploits 27 qubits and is heavy for a classical computer ***"
    }
}